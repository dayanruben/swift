// RUN: %scale-test --begin 1 --end 16 --step 1 --select NumLeafScopes %s
// REQUIRES: asserts,no_asan

// There was a performance hack that handled calls with a single unlabeled argument
// in a very specific way. For source compatibility reasons old behavior has to be
// preserved in the disjunction optimizer as well, but the old hack missed a case
// where a type of a member is known in advance (i.e. a property without overloads)
// because there as another hack (shrink) for that. This test makes sure that
// performance for such cases won't regress in the future.

struct Test {
  var v = 0

  func test() {
    let _ = 1.0 * (
      1.0 * Double(v) +
%for i in range(1, N):
  %if i % 2 == 0:
      1.0 * Double(v) +
  %else:
      1.0 * Double(self.v) +
  %end
%end
      1.0 * Double(v)
    )
  }
}
